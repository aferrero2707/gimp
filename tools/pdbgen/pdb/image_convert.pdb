# GIMP - The GNU Image Manipulation Program
# Copyright (C) 1995 Spencer Kimball and Peter Mattis

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# "Perlized" from C source by Manish Singh <yosh@gimp.org>

sub image_convert_rgb {
    $blurb = 'Convert specified image to RGB color';

    $help = <<'HELP';
This procedure converts the specified image to RGB color. This process
requires an image in Grayscale mode.
HELP

    &std_pdb_misc;

    @inargs = (
	{ name => 'image', type => 'image',
	  desc => 'The image' }
    );

    %invoke = (
	code => <<'CODE'
{
  if (gimp_pdb_image_is_not_base_type (image, GIMP_RGB, error))
    {
      success = gimp_image_convert_type (image, GIMP_RGB, NULL, NULL, error);
    }
  else
    {
      success = FALSE;
    }
}
CODE
    );
}

sub image_convert_grayscale {
    $blurb = 'Convert specified image to grayscale';

    $help = <<'HELP';
This procedure converts the specified image to grayscale. This process
requires an image in RGB mode.
HELP

    &std_pdb_misc;

    @inargs = (
	{ name => 'image', type => 'image',
	  desc => 'The image' }
    );

    %invoke = (
	code => <<'CODE'
{
  if (gimp_pdb_image_is_not_base_type (image, GIMP_GRAY, error))
    {
      success = gimp_image_convert_type (image, GIMP_GRAY, NULL, NULL, error);
    }
  else
    {
      success = FALSE;
    }
}
CODE
    );
}

sub image_convert_precision {
    $blurb = 'Convert the image to the specified precision';

    $help = <<'HELP';
This procedure converts the image to the specified precision.
HELP

    &mitch_pdb_misc('2012', '2.10');

    @inargs = (
	{ name => 'image', type => 'image',
	  desc => 'The image' },
	{ name => 'precision', type => 'enum GimpPrecision',
	  desc => 'The new precision' }
    );

    %invoke = (
	code => <<'CODE'
{
  if (gimp->plug_in_manager->current_plug_in)
    gimp_plug_in_enable_precision (gimp->plug_in_manager->current_plug_in);

  if (gimp_pdb_image_is_not_precision (image, precision, error))
    {
      gimp_image_convert_precision (image, precision,
                                    GEGL_DITHER_NONE,
                                    GEGL_DITHER_NONE,
                                    GEGL_DITHER_NONE,
                                    progress);
    }
  else
    {
      success = FALSE;
    }
}
CODE
    );
}

@headers = qw("core/gimp.h"
              "core/gimpimage.h"
              "core/gimpimage-convert-precision.h"
              "core/gimpimage-convert-type.h"
              "core/gimpitemstack.h"
              "core/gimppalette.h"
              "plug-in/gimpplugin.h"
              "plug-in/gimppluginmanager.h"
              "gimppdberror.h"
              "gimppdb-utils.h"
              "gimp-intl.h");

@procs = qw(image_convert_rgb
            image_convert_grayscale
            image_convert_precision);

%exports = (app => [@procs], lib => [@procs]);

$desc = 'Image Convert';
$doc_title = 'gimpimageconvert';
$doc_short_desc = 'Conversions between RGB and grayscale modes.';
$doc_long_desc = 'Conversions between RGB and grayscale modes.';

1;
